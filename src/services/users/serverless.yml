
service: users
package:
  individually: true
  exclude:
    - ./**
provider:
  name: aws  
  runtime: nodejs10.x
  region: eu-central-1
  environment:
    PGDATABASE: postgres
    PGHOST: collector-manager-db.cs1yuxavq9wp.eu-central-1.rds.amazonaws.com
    PGPASSWORD: "${self:custom.secrets.POSTGRES_PASS}"
    PGPORT: 5432
    PGUSER: root
  vpc:
    securityGroupIds:
      - sg-0fed9e6c      
    subnetIds:
      - subnet-afa1afd2
      - subnet-3818cb52
  role: arn:aws:iam::345413125048:role/lambdaRDSDataAccess

functions:
  create:
    handler: create.handler
    package:
      include: # Specify the directories and files which should be included in the deployment package for this specific function.      
        - create.js
    layers:
      - arn:aws:lambda:eu-central-1:345413125048:layer:postgres-nodejs:1
    events:
      - http:
          path: users
          method: post
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  list:
    handler: list.handler
    package:
      include: # Specify the directories and files which should be included in the deployment package for this specific function.      
        - list.js
    layers:
      - arn:aws:lambda:eu-central-1:345413125048:layer:postgres-nodejs:1
    events:
      - http:
          path: users
          method: get
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  get:
    handler: get.handler
    package:
      include: # Specify the directories and files which should be included in the deployment package for this specific function.      
        - get.js
    layers:
      - arn:aws:lambda:eu-central-1:345413125048:layer:postgres-nodejs:1
    events:
      - http:
          path: users/{id}
          method: get
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  update:
    handler: update.handler
    package:
      include: # Specify the directories and files which should be included in the deployment package for this specific function.      
        - update.js
    layers:
      - arn:aws:lambda:eu-central-1:345413125048:layer:postgres-nodejs:1
    events:
      - http:
          path: users/{id}
          method: put
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  delete:
    handler: delete.handler
    package:
      include: # Specify the directories and files which should be included in the deployment package for this specific function.      
        - delete.js
    layers:
      - arn:aws:lambda:eu-central-1:345413125048:layer:postgres-nodejs:1
    events:
      - http:
          path: users/{id}
          method: delete
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
custom:
  stage: ${opt:stage, 'dev'}
  secrets: ${file(../../../secrets.yml):${self:custom.stage}}
  config: file(../../config/${self:custom.stage}.json)